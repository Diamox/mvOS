--Version
SIVer = "2.0"

--Disable Terminate
os.pullEvent = os.pullEventRaw

--Load mvCore
if fs.exists("disk/.preboot/mvCore") then
	os.loadAPI("disk/.preboot/mvCore")
else
	error("Critical mvCore components are missing.")
end

--Splash Screen
mvCore.displayReset()
mvCore.dPrint("Starting installer", "c", nil, 1, 16, 1, colours.black)
sleep() --Doesn't like printing without this, don't know why

--Auto find hardware capabilities
if term.isColour() then
	if fs.exists("disk/.preboot/.hwinfocol") then
		loadhwinfo = fs.open("disk/.preboot/.hwinfocol", "r")
	else
		mvCore.dPrint("Components are missing, reboot.", nil, nil, 2, 12, 1)
	end
else
	if fs.exists("disk/.preboot/.hwinfo") then
		loadhwinfo = fs.open("disk/.preboot/.hwinfo", "r")
	else
		mvCore.dPrint("Components are missing, reboot.", nil, nil, 2, 12, 1)
	end
end
local hardwareInfo = loadhwinfo.readAll()
loadhwinfo.close()
hardware = textutils.unserialise(hardwareInfo)

--Hash check some core files
if not mvCore.validateHash("disk/.preboot/Shell","b3fe68811ac55a1147e630b27c9d606b4fa0e25bd7442356d262e3c3a519d26d") then
	mvCore.fileError(".preboot/Shell","corrupt")
end

function bootManager()
	mvCore.displayReset()
	mvCore.dPrint("mvSoftware Installer "..SIVer, nil, nil, 2, 2, 1)
	mvCore.dPrint("Hit the corrosponding keys to install", nil, nil, 2, 3, 1)
	mvCore.dPrint("[1] - Base system (mvCore)", nil, nil, 2, 6, 1)
	if hardware.capabilities.useColour == true then
		mvCore.dPrint("[2] - mvOS graphical system", nil, nil, 2, 7, 1)
	else
		mvCore.dPrint("[2] - (Incompatible)", nil, nil, 2, 7, 128)
	end
	mvCore.dPrint("[3] - Base system development tools", nil, nil, 2, 8, 1)
	mvCore.dPrint("Or", nil, nil, 2, 10, 1)
	mvCore.dPrint("[4] - Launch mvCore ProShell", nil, nil, 2, 12, 1)
	mvCore.dPrint("[5] - Boot from hard disk", nil, nil, 2, 13, 1)
	mvCore.dPrint("Hit [END] to shut down", nil, nil, 2, 18, 1)
	mvCore.dPrint(tostring(mvCore.copyright()), nil, nil, 2, 19, 128)
	while true do
	local event, param = os.pullEvent()
		if event == "key" then
			if param == mvCore.rawKeyMapper("1") then
				mvCore.displayReset()
					if fs.exists("disk/.install/instmvcore") then
						shell.run("disk/.install/instmvcore")
					else
						mvCore.dPrint("Components are missing, reboot.", nil, nil, 2, 15, 1)
					end
				os.shutdown()
				break
			elseif param == mvCore.rawKeyMapper("2") then
				if hardware.capabilities.useColour == true then
					mvCore.displayReset()
					if fs.exists("disk/.install/instmvos") then
						shell.run("disk/.install/instmvos")
					else
						mvCore.dPrint("Components are missing, reboot.", nil, nil, 2, 15, 1)
					end
					os.shutdown()
					break
				end
			elseif param == mvCore.rawKeyMapper("3") then
				mvCore.dPrint("Internal developer passphrase: ", nil, nil, 2, 10, 1)
				sleep()
				getPass = read('*')
				if getPass == "twilight" then
					mvCore.dPrint("-> Copying internal devtools", nil, nil, 2, 15, 1)
					if fs.exists(".devtools") then
						fs.delete(".devtools")
						fs.copy("disk/.preboot/.internal",".devtools")
					else
						fs.copy("disk/.preboot/.internal",".devtools")
					end
					bootManager()
					break
				else
					mvCore.dPrint("Incorrect passphrase", nil, nil, 2, 15, 1)
					sleep(1)
					bootManager()
					break
				end
			elseif param == mvCore.rawKeyMapper("4") then
				mvCore.displayReset()
				sleep()
				shell.run("disk/.preboot/shell")
				os.shutdown()
				break
			elseif param == mvCore.rawKeyMapper("5") then
				if fs.exists("startup") then
					shell.run("startup")
					break
				else
					os.reboot()
				end
			elseif param == mvCore.rawKeyMapper("End") then
				os.shutdown()
				break
			else
				--Don't do anything if any other key is hit
			end
		end
	end
end

bootManager()